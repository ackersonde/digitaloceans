version: 2
jobs:
  build:
    docker:
      - image: golang:1.8
    working_directory: /go/src/github.com/danackerson/digitalocean
    steps:
      - checkout
      - type: add-ssh-keys
        name: "Load key"
        fingerprints:
          - "93:c4:61:21:a6:82:d8:6d:4f:73:11:79:37:23:83:07"
      - type: shell
        name: Start ssh-agent
        command: |
          ssh-agent -s > ~/.ssh_agent_conf
          source ~/.ssh_agent_conf
          for _k in $(ls ${HOME}/.ssh/id_*); do
            ssh-add ${_k} || true
          done

      - deploy:
          name: setup new server
          command: |
            set -eu
            go get -t -d -v ./...
            ./set_env.sh
            go run do.go -fn=createNewServer
            source /tmp/new_digital_ocean_droplet_params
            echo "IPV4 of new server: $NEW_SERVER_IPV4"
            if [ "$NEW_SERVER_IPV4" ]; then
              curl --user ${CIRCLE_API_TOKEN}: \
                --data build_parameters[DEPLOY_SERVER_IP]=$NEW_SERVER_IPV4 \
                https://circleci.com/api/v1.1/project/github/$CIRCLE_PROJECT_USERNAME/ackerson.de-go/tree/master
              curl --user ${CIRCLE_API_TOKEN}: \
                --data build_parameters[DEPLOY_SERVER_IP]=$NEW_SERVER_IPV4 \
                https://circleci.com/api/v1.1/project/github/$CIRCLE_PROJECT_USERNAME/bender-slackbot/tree/master
              if [ "${CIRCLE_BRANCH}" == "master" ]; then
                go run do.go -fn=updateDNS -dropletID=$NEW_DROPLET_ID
                source ~/.ssh_agent_conf
                ssh -o "StrictHostKeyChecking no" $deployUser@$NEW_SERVER_IPV4 docker run -d --name letsencrypt --volumes-from ackerson.de quay.io/letsencrypt/letsencrypt certonly --non-interactive --text --agree-tos --webroot --no-eff-email --webroot-path /app/public -m dan@ackerson.de -d ackerson.de
                ssh -o "StrictHostKeyChecking no" $deployUser@$NEW_SERVER_IPV4 sleep 30
                ssh -o "StrictHostKeyChecking no" $deployUser@$NEW_SERVER_IPV4 docker cp letsencrypt:/etc/letsencrypt/ ./letsencrypt
                ssh -o "StrictHostKeyChecking no" $deployUser@$NEW_SERVER_IPV4 sudo cp ./letsencrypt/archive/ackerson.de/fullchain1.pem /home/ackersond/certs/server.pem
                ssh -o "StrictHostKeyChecking no" $deployUser@$NEW_SERVER_IPV4 sudo cp ./letsencrypt/archive/ackerson.de/privkey1.pem /home/ackersond/certs/server.key
                ssh -o "StrictHostKeyChecking no" $deployUser@$NEW_SERVER_IPV4 docker rm -f letsencrypt
                ssh -o "StrictHostKeyChecking no" $deployUser@$NEW_SERVER_IPV4 docker restart ackerson.de
              fi
            fi

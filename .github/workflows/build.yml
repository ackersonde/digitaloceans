name: Deploy DigitalOcean Droplet

on:
  push:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      ca_pub_fingerprint:
        description: fingerprint of CA signed user cert
        required: false

jobs:
  build:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: '3.9'
      - uses: actions/setup-go@v2
        with:
          go-version: '1.18'
      - name: Build application
        run: |
          go mod tidy
          go build do.go

          export WG_DO_HOME_PORT=$(echo ${{ secrets.ORG_WG_DO_HOME_PORT }} | base64 -d)
          export WG_DO_PRIVATE_KEY=$(echo ${{ secrets.ORG_WG_DO_PRIVATE_KEY }} | base64 -d)
          export WG_HOME_PUBLIC_KEY=$(echo ${{ secrets.ORG_WG_HOME_PUBLIC_KEY }} | base64 -d)
          export WG_DO_HOME_PRESHAREDKEY=$(echo ${{ secrets.ORG_WG_DO_HOME_PRESHAREDKEY }} | base64 -d)
          sed -i -e "s@{{WG_DO_HOME_PORT}}@$WG_DO_HOME_PORT@" scripts/do_ubuntu_userdata.sh
          sed -i -e "s@{{WG_DO_PRIVATE_KEY}}@$WG_DO_PRIVATE_KEY@" scripts/do_ubuntu_userdata.sh
          sed -i -e "s@{{WG_HOME_PUBLIC_KEY}}@$WG_HOME_PUBLIC_KEY@" scripts/do_ubuntu_userdata.sh
          sed -i -e "s@{{WG_DO_HOME_PRESHAREDKEY}}@$WG_DO_HOME_PRESHAREDKEY@" scripts/do_ubuntu_userdata.sh

          export CTX_DIGITALOCEAN_DROPLET_PROXY_TOKEN=$(echo ${{ secrets.ORG_DIGITALOCEAN_DROPLET_PROXY_TOKEN }} | base64 -d)
          export CTX_DIGITALOCEAN_FIREWALL=$(echo ${{ secrets.ORG_DIGITALOCEAN_FIREWALL }} | base64 -d)
          export ACKDE_HOST_SSH_KEY_PUB_B64=${{ secrets.ORG_ACKDE_HOST_SSH_KEY_PUB }}
          export ACKDE_HOST_SSH_KEY_PRIV_B64=${{ secrets.ORG_ACKDE_HOST_SSH_KEY_PRIV }}
          export SERVER_DEPLOY_CACERT_B64=${{ secrets.ORG_SERVER_DEPLOY_CACERT }}
          export SERVER_DEPLOY_SECRET_B64=${{ secrets.ORG_SERVER_DEPLOY_SECRET }}
          export SERVER_DEPLOY_PUBLIC_B64=${{ secrets.ORG_SERVER_DEPLOY_PUBLIC }}
          export SYNCTHING_CONFIG_B64=${{ secrets.ORG_CLOUD_SYNCTHING_CONFIG }}
          export SYNCTHING_KEY=$(echo ${{ secrets.ORG_CLOUD_SYNCTHING_KEY }} | base64 -d)
          export SYNCTHING_CERT=$(echo ${{ secrets.ORG_CLOUD_SYNCTHING_CERT }} | base64 -d)
          export TITAN_PUBLIC_KEY=$(echo ${{ secrets.ORG_TITAN_PUBLIC_KEY }} | base64 -d)
          export ACME_JSON=$(echo ${{ secrets.ORG_ACME_JSON }} | base64 -d)

          envsubst '${SERVER_DEPLOY_CACERT_B64} ${SERVER_DEPLOY_SECRET_B64} ${SERVER_DEPLOY_PUBLIC_B64} ${TITAN_PUBLIC_KEY} ${ACME_JSON} ${SYNCTHING_CONFIG_B64} ${SYNCTHING_KEY} ${SYNCTHING_CERT}' < scripts/do_ubuntu_userdata.sh > digitalocean_ubuntu_userdata.sh

          export BUILD_HOST=$(echo ${{ secrets.ORG_BUILD_HOST }} | base64 -d)
          export MASTER_HOST=$(echo ${{ secrets.ORG_MASTER_HOST }} | base64 -d)
          export SLAVE_HOST=$(echo ${{ secrets.ORG_SLAVE_HOST }} | base64 -d)
          export SERVERS="ubuntu@$MASTER_HOST ubuntu@$SLAVE_HOST ackersond@$BUILD_HOST"
          export GITHUB_APP_CLIENT_ID=$(echo ${{ secrets.ORG_GITHUB_APP_CLIENT_ID }} | base64 -d)
          export GITHUB_SECRETS_PK_PEM=$(echo ${{ secrets.ORG_GITHUB_SECRETS_PK_PEM }} | base64 -d)
